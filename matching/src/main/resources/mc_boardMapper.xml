<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 게시글정보 처리 SQL -->

<mapper namespace="global.sesoc.project.matching.DAO.MC_BoardMapper">
	
	<!-- rowbound는 지정한 곳에서 지정한 갯수만큼 알아서 가져오기 때문에 parameter 지정 X. -->
	<select id="list" parameterType="string" resultType="mcb">
		select 
			boardnum
			, id
			, title
			, to_char(inputdate, 'YYYY-MM-DD') inputdate
			,hits
		from 
		 	board 
		where 
		 	upper(title) like upper ('%' || #{title} || '%') 
		order by boardnum desc
	</select>
	
	<!-- 다른 int(insert할때)와 다르게 이건 결과값이 int이므로 resulttype을 지정해줘야함. -->
	<select id="getTotal" parameterType="string" resultType="int">
		select 
			count(*) from board
		where 
		 	upper(title) like upper ('%' || #{title} || '%')
	</select>
	
	<select id="search" parameterType="string" resultType="mcb">
		select * from board where title like #{title}
	</select>
	
	<select id="read" parameterType="int" resultType="mcb">
		select * from board where boardnum = #{boardnum}
	</select>
	
	<insert id="write" parameterType="mcb">
		insert into board (
			boardnum
			, id
			, title
			, content
			<if test="originalfile != null and savedfile != null">
			, originalfile
			, savedfile
			</if>
		)
		values (
			board_seq.nextval
			, #{id}
			, #{title}
			, #{content}
			<if test="originalfile != null and savedfile != null">
			, #{originalfile}
			, #{savedfile}
			</if>
		)
	</insert>
	
	<update id="hits" parameterType="int">
		update board set hits = hits + 1 where boardnum = #{boardnum}
	</update>
	
	<!-- 게시글 읽기 -->
	<select id="getBoard" parameterType="int" resultType="mcb">
		select 
			boardnum
			, id
			, title
			, content
			, to_char(inputdate, 'YYYY-MM-DD HH24:MI:SS') inputdate
			, hits
			, originalfile
			, savedfile
		from 
			board 
		where 
			boardnum = #{boardnum}
	</select>
	
	<update id="edit" parameterType="mcb">
		update board set 
			title = #{title}
			, content = #{content}
			<if test="originalfile != null and savedfile != null">
			, originalfile = #{originalfile}
			, savedfile = #{savedfile}
			</if>
		where 
			boardnum = #{boardnum} and id = #{id}
	</update>
	
	<delete id="del" parameterType="HashMap">
		delete from board where id=#{id} and BOARDNUM=#{boardnum}
	</delete>
	
	<insert id="replyWrite" parameterType="mcr">
		insert into reply (replynum, boardnum, id, text) values (reply_seq.nextval, #{boardnum}, #{id}, #{text})
	</insert>
	
	<select id="replyRead" parameterType="int" resultType="mcr">
		select
			replynum
			, boardnum
			, id
			, text
			, to_char(inputdate, 'YYYY-MM-DD') inputdate
		from reply 
		where boardnum = #{boardnum} 
		order by replynum desc
	</select>
	
<!-- 	<update id="replyEdit" parameterType="HashMap">
		update board set text = #{text} where replynum = #{replynum} and id = #{id}
	</update> -->
	
	<delete id="replyDelete" parameterType="HashMap">
		delete from reply where replynum = #{replynum} and id = #{id}
	</delete>
</mapper>
